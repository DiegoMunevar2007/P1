/* Generated By:JavaCC: Do not edit this line. RobotConstants.java */
package uniandes.lym.robot.control;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface RobotConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MOV = 5;
  /** RegularExpression Id. */
  int PUT = 6;
  /** RegularExpression Id. */
  int GO = 7;
  /** RegularExpression Id. */
  int HOP = 8;
  /** RegularExpression Id. */
  int LPAR = 9;
  /** RegularExpression Id. */
  int RPAR = 10;
  /** RegularExpression Id. */
  int SEMI = 11;
  /** RegularExpression Id. */
  int IGUAL = 12;
  /** RegularExpression Id. */
  int LBRAC = 13;
  /** RegularExpression Id. */
  int RBRAC = 14;
  /** RegularExpression Id. */
  int TURNTOMY = 15;
  /** RegularExpression Id. */
  int TURNTOTHE = 16;
  /** RegularExpression Id. */
  int WALK = 17;
  /** RegularExpression Id. */
  int JUMP = 18;
  /** RegularExpression Id. */
  int DROP = 19;
  /** RegularExpression Id. */
  int PICK = 20;
  /** RegularExpression Id. */
  int GRAB = 21;
  /** RegularExpression Id. */
  int LETGO = 22;
  /** RegularExpression Id. */
  int POP = 23;
  /** RegularExpression Id. */
  int MOVES = 24;
  /** RegularExpression Id. */
  int NOP = 25;
  /** RegularExpression Id. */
  int SAFEEXE = 26;
  /** RegularExpression Id. */
  int IF = 27;
  /** RegularExpression Id. */
  int THEN = 28;
  /** RegularExpression Id. */
  int ELSE = 29;
  /** RegularExpression Id. */
  int DO = 30;
  /** RegularExpression Id. */
  int REP = 31;
  /** RegularExpression Id. */
  int TIMES = 32;
  /** RegularExpression Id. */
  int ISBLOCKED = 33;
  /** RegularExpression Id. */
  int ISFACING = 34;
  /** RegularExpression Id. */
  int ZERO = 35;
  /** RegularExpression Id. */
  int NOT = 36;
  /** RegularExpression Id. */
  int VALOR = 37;
  /** RegularExpression Id. */
  int SIZE = 38;
  /** RegularExpression Id. */
  int MYX = 39;
  /** RegularExpression Id. */
  int MYY = 40;
  /** RegularExpression Id. */
  int MYCHIPS = 41;
  /** RegularExpression Id. */
  int MYBALLOONS = 42;
  /** RegularExpression Id. */
  int BALLOONSHERE = 43;
  /** RegularExpression Id. */
  int CHIPSHERE = 44;
  /** RegularExpression Id. */
  int ROOMFORCHIPS = 45;
  /** RegularExpression Id. */
  int EXEC = 46;
  /** RegularExpression Id. */
  int NEW = 47;
  /** RegularExpression Id. */
  int VAR = 48;
  /** RegularExpression Id. */
  int MACRO = 49;
  /** RegularExpression Id. */
  int FORWARD = 50;
  /** RegularExpression Id. */
  int RIGHT = 51;
  /** RegularExpression Id. */
  int LEFT = 52;
  /** RegularExpression Id. */
  int FRONT = 53;
  /** RegularExpression Id. */
  int BACK = 54;
  /** RegularExpression Id. */
  int NORTH = 55;
  /** RegularExpression Id. */
  int EAST = 56;
  /** RegularExpression Id. */
  int WEST = 57;
  /** RegularExpression Id. */
  int SOUTH = 58;
  /** RegularExpression Id. */
  int FI = 59;
  /** RegularExpression Id. */
  int P = 60;
  /** RegularExpression Id. */
  int ELEMENTO = 61;
  /** RegularExpression Id. */
  int BALLOONS = 62;
  /** RegularExpression Id. */
  int CHIPS = 63;
  /** RegularExpression Id. */
  int NUM = 64;
  /** RegularExpression Id. */
  int DIGIT = 65;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"Mov\"",
    "\"Put\"",
    "\"GO\"",
    "\"HOP\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\"=\"",
    "\"{\"",
    "\"}\"",
    "\"TURNTOMY\"",
    "\"TURNTOTHE\"",
    "\"WALK\"",
    "\"JUMP\"",
    "\"DROP\"",
    "\"PICK\"",
    "\"GRAB\"",
    "\"LETGO\"",
    "\"POP\"",
    "\"MOVES\"",
    "\"NOP\"",
    "\"SAFEEXE\"",
    "\"IF\"",
    "\"THEN\"",
    "\"ELSE\"",
    "\"DO\"",
    "\"REP\"",
    "\"TIMES\"",
    "\"ISBLOCKED?\"",
    "\"ISFACING?\"",
    "\"ZERO?\"",
    "\"NOT\"",
    "<VALOR>",
    "\"SIZE\"",
    "\"MYX\"",
    "\"MYY\"",
    "\"MYCHIPS\"",
    "\"MYBALLOONS\"",
    "\"BALLOONSHERE\"",
    "\"CHIPSHERE\"",
    "\"ROOMFORCHIPS\"",
    "\"EXEC\"",
    "\"NEW\"",
    "\"VAR\"",
    "\"MACRO\"",
    "\"FORWARD\"",
    "\"RIGHT\"",
    "\"LEFT\"",
    "\"FRONT\"",
    "\"BACK\"",
    "\"NORTH\"",
    "\"EAST\"",
    "\"WEST\"",
    "\"SOUTH\"",
    "<FI>",
    "<P>",
    "<ELEMENTO>",
    "\"BALLOONS\"",
    "\"CHIPS\"",
    "<NUM>",
    "<DIGIT>",
    "\",\"",
  };

}
